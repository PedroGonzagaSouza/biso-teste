
---

## üöÄ Funcionalidades

### Backend (API)
- **Endpoints**:
  - `/api/filmes`: Retorna a lista de filmes dispon√≠veis.
  - `/api/filmes/{usuario_id}/recomendacoes`: Retorna recomenda√ß√µes personalizadas para o usu√°rio.
  - `/api/tratamento/recomendacao/{filme}`: Retorna recomenda√ß√µes baseadas em um filme espec√≠fico.
- **Banco de Dados**:
  - Tabelas: `FILMES`, `RATINGS`, `TAGS`, `USUARIOS`.
  - Populado automaticamente com dados de exemplo ao iniciar o servidor.

### Frontend
- **P√°ginas**:
  - **Home**: P√°gina inicial do sistema.
  - **Filmes**: Lista de filmes dispon√≠veis.
  - **Recomenda√ß√µes**: Recomenda√ß√µes personalizadas para o usu√°rio.
  - **Assistidos**: Lista de filmes assistidos pelo usu√°rio.
  - **Login/Cadastro**: Autentica√ß√£o de usu√°rios.
- **Componentes**:
  - `CardFilmes`: Exibe informa√ß√µes de um filme.
  - `PaginationComponente`: Pagina√ß√£o para listas de filmes.

---

## üõ†Ô∏è Tecnologias Utilizadas

### Backend
- **FastAPI**: Framework para cria√ß√£o de APIs.
- **SQLite**: Banco de dados leve e integrado.
- **Pandas**: Manipula√ß√£o de dados.
- **Scikit-learn**: Algoritmos de recomenda√ß√£o.

### Frontend
- **React**: Biblioteca para constru√ß√£o de interfaces.
- **Vite**: Ferramenta de build r√°pida.
- **Tailwind CSS**: Estiliza√ß√£o.
- **React Router**: Gerenciamento de rotas.

---


## Clonar projeto

```bash
git clone -c http.SslVerify=false https://github.com/PedroGonzagaSouza/biso-teste.git
## üì¶ Instala√ß√£o

### Backend
1. Navegue at√© a pasta `api/`:
   ```bash
   cd api

2. Crie um ambiente virtual
   ```bash
  python -m venv venv
  source venv/bin/activate  # Linux/Mac
  venv\Scripts\activate     # Windows

3. Instale as depend√™ncias:
   ```bash
   pip install -r requirements.txt
   ```
4. Inicie o servidor:
   ```bash
   fastapi dev server.py 
   ou
   uvicorn server:app --reload
   ```
5. Acesse a API em `http://localhost:8000`.
6. Acesse a documenta√ß√£o da API em `http://localhost:8000/docs`.

### Frontend
1. Navegue at√© a pasta `front/`:
   ```bash
   cd front/
   ```

2. Instale as depend√™ncias:
   ```bash
   npm install
   ```

  Talvez seja necess√°rio usar o comando: 
    ```bash
    npm install --legacy-peer-deps
    ```

3. Inicie o servidor:
   ```bash
   npm run dev
   ```
4. Acesse o frontend em `http://localhost:5173`.


üìö Estrutura do Banco de Dados
      Tabelas

      ¬∞ FILMES:
      MOVIEID: ID do filme.
      TITLE: T√≠tulo do filme.
      GENRES: G√™neros do filme.
      YEAR: Ano de lan√ßamento.

      ¬∞ RATINGS:
      USERID: ID do usu√°rio.
      MOVIEID: ID do filme.
      RATING: Avalia√ß√£o do filme.

      ¬∞ USUARIOS:
      USERID: ID do usu√°rio.
      NOME: Nome do usu√°rio.
      LOGIN: Login do usu√°rio.
      SENHA: Senha do usu√°rio.

üìñ Licen√ßa
Este projeto √© de uso educacional e n√£o possui uma licen√ßa espec√≠fica.

üë®‚Äçüíª Autor
Pedro Gonzaga